# Generated by Django 5.2 on 2025-05-05 10:24

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('total_marks', models.IntegerField()),
                ('total_questions', models.IntegerField()),
                ('attempts_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('institution', models.CharField(default='parul', max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=50)),
                ('time', models.CharField(max_length=50)),
                ('thumbnail', models.URLField()),
                ('is_published', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], max_length=50)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='learning.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteBatchLearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('institution', models.CharField(default='parul', max_length=100)),
                ('batch', models.CharField(max_length=50)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learningpath')),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('total_marks', models.IntegerField()),
                ('total_questions', models.IntegerField()),
                ('total_duration', models.IntegerField(help_text='Duration in minutes')),
                ('total_qualifying_percentage', models.FloatField()),
                ('exam_type', models.CharField(max_length=50)),
                ('password_exists', models.BooleanField(default=False)),
                ('tab_switches_allowed', models.BooleanField(default=False)),
                ('no_of_tab_switches', models.IntegerField(default=0)),
                ('is_fullscreen', models.BooleanField(default=False)),
                ('shuffle', models.BooleanField(default=False)),
                ('voice_monitoring', models.BooleanField(default=False)),
                ('face_proctoring', models.BooleanField(default=False)),
                ('electronic_monitoring', models.BooleanField(default=False)),
                ('learning_path', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='learning.learningpath')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('module_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='learning.learningpath')),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('lecture_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='learning.module')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='module',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='learning.module'),
        ),
        migrations.CreateModel(
            name='AssessmentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('attempt_number', models.IntegerField(default=1)),
                ('score', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('not_attempted', 'Not Attempted'), ('in_progress', 'In Progress'), ('completed', 'Completed')], max_length=50)),
                ('attempted_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='learning.assessment')),
            ],
            options={
                'unique_together': {('user_id', 'assessment', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='LearningPathProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('progress', models.FloatField(default=0.0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='learning.learningpath')),
            ],
            options={
                'unique_together': {('user_id', 'learning_path')},
            },
        ),
        migrations.CreateModel(
            name='LectureProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('is_viewed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='learning.lecture')),
            ],
            options={
                'unique_together': {('user_id', 'lecture')},
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('progress', models.FloatField(default=0.0)),
                ('is_completed', models.BooleanField(default=False)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='learning.module')),
            ],
            options={
                'unique_together': {('user_id', 'module')},
            },
        ),
    ]
